{"version":3,"sources":["webpack://_N_E/./components/UI/FormControl/index.js","webpack://_N_E/./components/UI/Label/index.js","webpack://_N_E/./components/UI/TextInput/index.js","webpack://_N_E/./components/UI/TheSelectSearch/index.js","webpack://_N_E/./containers/ListNavigation/index.js","webpack://_N_E/./parts/PublicOrPrivateSelectSearch/index.js","webpack://_N_E/./components/UI/TextArea/index.js","webpack://_N_E/./utils/hooks/useForm.js","webpack://_N_E/./utils/constants/input-names.js","webpack://_N_E/./pages/list/add-or-edit/index.js","webpack://_N_E/./utils/constants/select-search.js","webpack://_N_E/./utils/hocs/withAuth/index.js","webpack://_N_E/?7d97","webpack://_N_E/./components/UI/TheSelectSearch/default-style.module.css","webpack://_N_E/./parts/PublicOrPrivateSelectSearch/style.module.css"],"names":["CLASS_NAME","className","rest","clsx","id","label","htmlFor","type","TheSelectSearch","forwardRef","ref","name","classes","key","defaultClasses","renderValue","valueProps","listId","pathname","useRouter","updateListLinks","title","href","LINKS","query","QUERY_PARAMS","disabled","createListLinks","listLinks","map","listLink","selected","props","FormControl","Label","submitCallback","initialInputs","useState","inputs","setInputs","onSubmitHandler","useCallback","event","preventDefault","inputChangeHandler","persist","prevInputs","target","checked","Number","value","updateInputsHandler","newInputs","LIST_NAME","LIST_DESCRIPTION","PUBLIC_OR_PRIVATE_LIST","withAuth","accountId","accessToken","STATUSES","editStatus","setEditStatus","submitStatus","setSubmitStatus","editError","setEditError","useEffect","Router","useForm","body","INPUT_NAMES","description","public","YES_OR_NO_OPTIONS","iso_639_1","config","headers","tmdbAPI","TMDB_API_NEW_VERSION","response","data","console","log","movies","created_by","toString","Error","listName","Loader","NotFound","subtitle","message","PageWrapper","PaddingWrapper","Header","ListNavigation","onSubmit","TextInput","onChange","required","newIsPublicList","options","Button","style","width","marginTop","loading","contained","SORT_BY_OPTIONS","WrappedComponent","React","useAuth","isAuthenticated","error","window","__NEXT_P","push","module","exports"],"mappings":"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","file":"static/chunks/pages/list/add-or-edit-e617a7d42489fef1f9ff.js","sourcesContent":["\n\nimport clsx from 'clsx';\n\nconst CLASS_NAME = 'form-control';\n\nconst FormControl = ({\n  className,\n  ...rest\n}) => (\n  <>\n    <div\n      className={clsx(CLASS_NAME, className)}\n      {...rest} />\n    <style jsx>{`\n      .${CLASS_NAME} {\n        margin: 8px 0;\n        display: flex;\n        flex-direction: column;\n        align-items: flex-start;\n      }\n      .${CLASS_NAME} > :global(label + *) {\n        margin-top: 4px;\n      }\n    `}</style>\n  </>\n);\n\nexport default FormControl;\n","\n\nimport clsx from 'clsx';\n\nconst CLASS_NAME = 'label';\n\nconst Label = ({\n  className,\n  ...rest\n}) => (\n  <>\n    <label\n      className={clsx(CLASS_NAME, className)}\n      {...rest} />\n    <style jsx>{`\n      .${CLASS_NAME} {\n        font-size: 1.5rem;\n      }\n    `}</style>\n  </>\n);\n\nexport default Label;\n","\nimport Label from 'components/UI/Label';\nimport FormControl from 'components/UI/FormControl';\n\nconst TextInput = ({\n  id = 'input',\n  label,\n  ...rest\n}) => (\n  <>\n    <FormControl>\n      {label && <Label htmlFor={id}>{label}</Label>}\n      <input\n        id={id}\n        type='text'\n        {...rest} />\n    </FormControl>\n    <style jsx>{`\n      input[type=text] {\n        width: 100%;\n        padding: 12px 16px;\n        color: var(--palette-text-primary);\n        font-size: 1.5rem;\n        box-sizing: border-box;\n        border: 1px solid var(--palette-divider);\n        background-color: var(--palette-background-paper);\n        transition: color var(--duration) var(--timing), background-color var(--duration) var(--timing);\n        outline: none;\n      }\n    `}</style>\n  </>\n);\n\nexport default TextInput;\n","\n\nimport SelectSearch from 'react-select-search/dist/cjs';\nimport clsx from 'clsx';\n\nimport Label from 'components/UI/Label';\nimport FormControl from 'components/UI/FormControl';\nimport defaultClasses from 'components/UI/TheSelectSearch/default-style.module.css';\n\nconst TheSelectSearch = React.forwardRef(({\n  id,\n  name,\n  label,\n  classes,\n  ...rest\n}, ref) => (\n  <>\n    <FormControl>\n      {label && <Label htmlFor={id}>{label}</Label>}\n      <SelectSearch\n        ref={ref}\n        className={key => clsx(defaultClasses?.[key], classes?.[key])}\n        renderValue={valueProps => (\n          <input\n            id={id}\n            name={name}\n            className={clsx(defaultClasses?.['input'], classes?.['input'])}\n            {...valueProps} />\n        )}\n        {...rest} />\n    </FormControl>\n  </>\n));\n\nexport default TheSelectSearch;\n","\nimport Link from 'next/link';\nimport { useRouter } from 'next/router';\n\nimport Navbar, { NavbarItem } from 'components/UI/Navbar';\nimport LINKS from 'utils/constants/links';\nimport QUERY_PARAMS from 'utils/constants/query-params';\n\nconst ListNavigation = ({ listId }) => {\n  const { pathname } = useRouter();\n\n  const updateListLinks = [\n    {\n      title: 'Edit List',\n      href: {\n        pathname: LINKS.ADD_OR_EDIT_LIST.HREF,\n        query: {[QUERY_PARAMS.ID]: listId}\n      },\n      disabled: false\n    },\n    {\n      title: 'View List',\n      href: {\n        pathname: LINKS.LIST.HREF,\n        query: {\n          [QUERY_PARAMS.ID]: listId,\n          [QUERY_PARAMS.PAGE]: 1\n        }\n      },\n      disabled: false\n    },\n    {\n      title: 'Add/Remove Items',\n      href: {\n        pathname: LINKS.ADD_OR_REMOVE_ITEMS_AT_LIST.HREF,\n        query: {\n          [QUERY_PARAMS.LIST_ID]: listId,\n          [QUERY_PARAMS.PAGE]: 1\n        }\n      },\n      disabled: false\n    },\n    {\n      title: 'Choose Image',\n      href: {\n        pathname: LINKS.CHOOSE_LIST_IMAGE.HREF,\n        query: {[QUERY_PARAMS.LIST_ID]: listId, [QUERY_PARAMS.PAGE]: 1}\n      },\n      disabled: false\n    },\n    {\n      title: 'Delete List',\n      href: {\n        pathname: LINKS.REMOVE_LIST.HREF,\n        query: {[QUERY_PARAMS.ID]: listId}\n      },\n      disabled: false\n    }\n  ];\n\n  const createListLinks = [\n    {\n      title: 'Step1: List Details',\n      href: {\n        pathname: LINKS.ADD_OR_EDIT_LIST.HREF\n      },\n      disabled: false\n    },\n    {\n      title: 'Step2: Add Items',\n      href: {\n        pathname: LINKS.ADD_OR_REMOVE_ITEMS_AT_LIST.HREF\n      },\n      disabled: true\n    },\n    {\n      title: 'Step3: Choose Image',\n      href: {\n        pathname: LINKS.CHOOSE_LIST_IMAGE.HREF\n      },\n      disabled: true\n    }\n  ];\n\n  let listLinks = listId ? updateListLinks : createListLinks;\n\n  return (\n    <Navbar>\n      {listLinks.map(listLink => (\n        <NavbarItem\n          key={listLink.title}\n          disabled={listLink.disabled}\n          selected={pathname === listLink.href.pathname}>\n          <Link\n            href={listLink.href}>\n            <a>{listLink.title}</a>\n          </Link>\n        </NavbarItem>  \n      ))}\n    </Navbar>\n  );\n};\n\nexport default ListNavigation;\n","\n\nimport TheSelectSearch from 'components/UI/TheSelectSearch';\nimport classes from './style.module.css';\n\nconst PublicOrPrivateSelectSearch = props => (\n  <TheSelectSearch\n    classes={classes}\n    {...props} />\n);\n\nexport default PublicOrPrivateSelectSearch;\n","\n\nimport Label from 'components/UI/Label';\nimport FormControl from 'components/UI/FormControl';\n\nconst TextArea = ({\n  id = 'text-area',\n  label,\n  ...rest\n}) => (\n  <FormControl>\n    {label && <Label htmlFor={id}>{label}</Label>}\n    <textarea\n      id={id}\n      {...rest} />\n    <style jsx>{`\n      textarea {\n        width: 100%;\n        height: 150px;\n        padding: 12px 16px;\n        color: var(--palette-text-primary);\n        font-size: 1.5rem;\n        font-family: inherit;\n        box-sizing: border-box;\n        border: 1px solid var(--palette-divider);\n        transition: color var(--duration) var(--timing), background-color var(--duration) var(--timing);\n        outline: none;\n        background-color: var(--palette-background-paper);\n        resize: none;\n      }\n    `}</style>\n  </FormControl>\n);\n\nexport default TextArea;\n","\n\nimport { useState, useCallback } from 'react';\n\nconst useForm = ({ submitCallback, initialInputs = {} } = {}) => {\n  const [inputs, setInputs] = useState(initialInputs);\n\n  const onSubmitHandler = useCallback(event => {\n    event && event.preventDefault();\n    submitCallback && submitCallback();\n  }, [submitCallback]);\n\n  const inputChangeHandler = useCallback(event => {\n    event.persist && event.persist();\n    setInputs(prevInputs => {\n      const nextInputs = {\n        ...prevInputs,\n        [event.target.name]: event.target.type === 'checkbox'\n          ? event.target.checked\n          : event.target.type === 'number'\n            ? Number(event.target.value)\n            : event.target.value\n      };\n\n      return nextInputs;\n    });\n  }, []);\n\n  const updateInputsHandler = useCallback(newInputs => {\n    setInputs(newInputs);\n  }, []);\n\n  return {\n    onSubmitHandler,\n    inputChangeHandler,\n    inputs,\n    updateInputsHandler\n  };\n};\n\nexport default useForm;\n","\nconst INPUT_NAMES = {\n  LIST_NAME: 'list-name',\n  LIST_DESCRIPTION: 'list-description',\n  PUBLIC_OR_PRIVATE_LIST: 'public-or-private-list'\n};\n\nexport default INPUT_NAMES;\n","\n\nimport { useState, useEffect } from 'react';\nimport Router, { useRouter } from 'next/router';\nimport Head from 'next/head';\n\nimport Header from 'parts/Header';\nimport NotFound from 'parts/NotFound';\nimport PageWrapper from 'parts/PageWrapper';\nimport PaddingWrapper from 'parts/PaddingWrapper';\nimport PublicOrPrivateSelectSearch from 'parts/PublicOrPrivateSelectSearch';\nimport ListNavigation from 'containers/ListNavigation';\nimport TextInput from 'components/UI/TextInput';\nimport TextArea from 'components/UI/TextArea';\nimport Button from 'components/UI/Button';\nimport Loader from 'components/UI/Loader';\nimport withAuth from 'utils/hocs/withAuth';\nimport { YES_OR_NO_OPTIONS } from 'utils/constants/select-search';\nimport { TMDB_API_NEW_VERSION } from 'config/tmdb';\nimport useForm from 'utils/hooks/useForm';\nimport INPUT_NAMES from 'utils/constants/input-names';\nimport QUERY_PARAMS from 'utils/constants/query-params';\nimport LINKS from 'utils/constants/links';\nimport STATUSES from 'utils/constants/statuses';\nimport tmdbAPI from 'services/tmdbAPI';\n\n/**\n * TODO:\n * Should integrate authorization i.e. if this belongs to me.\n * Should handle `Invalid description` bug.\n * Should handle error state and show proper error message based on error state.\n * Could handle `sort_by` feature.\n */\n\nconst AddOrEdit = ({\n  accountId,\n  accessToken\n}) => {\n  const { query } = useRouter();\n  const listId = query[QUERY_PARAMS.ID];\n\n  const [editStatus, setEditStatus] = useState(STATUSES.IDLE);\n  const [submitStatus, setSubmitStatus] = useState(STATUSES.IDLE);\n  // TODO: could handle errors\n  const [editError, setEditError] = useState(null);\n  // const [addError, setAddError] = useState(null);\n\n  useEffect(() => {\n    // MEMO: check if there is no query parameter (list ID) which means ADD case\n    if (Router.router.asPath === LINKS.ADD_OR_EDIT_LIST.HREF) {\n      setEditStatus(STATUSES.RESOLVED);\n    }\n  }, []);\n\n  const submitCallback = async () => {\n    try {\n      setSubmitStatus(STATUSES.PENDING);\n      const body = {\n        name: inputs[INPUT_NAMES.LIST_NAME],\n        description: inputs[INPUT_NAMES.LIST_DESCRIPTION],\n        // TODO: vulnerable\n        public: inputs[INPUT_NAMES.PUBLIC_OR_PRIVATE_LIST] === YES_OR_NO_OPTIONS[0].value,\n        iso_639_1: 'en'\n      };\n      const config = {\n        headers: {\n          'Authorization': `Bearer ${accessToken}`\n        }\n      };\n\n      // MEMO: Edit/Add case\n      const response = listId\n        ? await tmdbAPI.put(`/${TMDB_API_NEW_VERSION}/list/${listId}`, body, config)\n        : await tmdbAPI.post(`/${TMDB_API_NEW_VERSION}/list`, body, config);\n\n      setSubmitStatus(STATUSES.RESOLVED);\n\n      // MEMO: Add case\n      if (!listId) {\n        const { id } = response.data;\n        Router.push({\n          query: {\n            [QUERY_PARAMS.ID]: id\n          }\n        });\n      }\n    } catch (error) {\n      console.log('[AddOrEdit submitCallback] error => ', error);\n      setSubmitStatus(STATUSES.REJECTED);\n      // setAddError(error);\n    }\n  };\n\n  const {\n    inputs,\n    inputChangeHandler,\n    updateInputsHandler,\n    onSubmitHandler\n  } = useForm({\n    submitCallback,\n    initialInputs: {\n      [INPUT_NAMES.LIST_NAME]: '',\n      [INPUT_NAMES.LIST_DESCRIPTION]: '',\n      [INPUT_NAMES.PUBLIC_OR_PRIVATE_LIST]: YES_OR_NO_OPTIONS[0].value\n    }\n  });\n\n  const publicOrPrivateSelectHandler = newIsPublicList => {\n    inputChangeHandler({\n      target: {\n        name: INPUT_NAMES.PUBLIC_OR_PRIVATE_LIST,\n        value: newIsPublicList\n      }\n    });\n  };\n\n  useEffect(() => {\n    (async () => {\n      if (!listId) return;\n      if (!accessToken) return;\n      if (!accountId) return;\n\n      try {\n        setEditStatus(STATUSES.PENDING);\n        const config = {\n          headers: {\n            'Authorization': `Bearer ${accessToken}`\n          }\n        };\n        const response = await tmdbAPI.get(`/${TMDB_API_NEW_VERSION}/list/${listId}`, config);\n        const movies = response.data;\n        if (movies.created_by.id === accountId) {\n          updateInputsHandler({\n            [INPUT_NAMES.LIST_NAME]: movies.name,\n            [INPUT_NAMES.LIST_DESCRIPTION]: movies.description,\n            // TODO: vulnerable\n            [INPUT_NAMES.PUBLIC_OR_PRIVATE_LIST]: movies.public.toString()\n          });\n        } else {\n          throw new Error('You don\\'t seem to have access to this page.');\n        }\n      } catch (error) {\n        console.log('[Edit useEffect] error => ', error);\n        setEditStatus(STATUSES.REJECTED);\n        setEditError(error);\n      }\n    })();\n  }, [listId, updateInputsHandler, accessToken, accountId]);\n\n  const listName = inputs[INPUT_NAMES.LIST_NAME];\n\n  useEffect(() => {\n    if (!listName) return;\n\n    setEditStatus(STATUSES.RESOLVED);\n  }, [listName]);\n\n  if (editStatus === STATUSES.IDLE || editStatus === STATUSES.PENDING) {\n    return <Loader />;\n  }\n\n  if (editStatus === STATUSES.REJECTED) {\n    // TODO: should show proper error message based on error state\n    return (\n      <NotFound\n        title='Sorry!'\n        subtitle={editError?.message ?? 'We can\\'t find the page you\\'re looking for...'} />\n    );\n  }\n\n  if (editStatus === STATUSES.RESOLVED) {\n    return (\n      <>\n        <Head>\n          <title>{listId ? listName : 'Create New List: Step1'}</title>\n        </Head>\n        <PageWrapper>\n          <PaddingWrapper>\n            <Header\n              title={listId ? listName : 'Create New List: Step1'}\n              subtitle='Edit' />\n            <ListNavigation listId={listId} />\n            <form onSubmit={onSubmitHandler}>\n              <TextInput\n                id='name'\n                label='Name'\n                name={INPUT_NAMES.LIST_NAME}\n                value={inputs[INPUT_NAMES.LIST_NAME]}\n                onChange={inputChangeHandler}\n                required />\n              <TextArea\n                id='description'\n                label='Description'\n                name={INPUT_NAMES.LIST_DESCRIPTION}\n                value={inputs[INPUT_NAMES.LIST_DESCRIPTION]}\n                onChange={inputChangeHandler} />\n              <PublicOrPrivateSelectSearch\n                id='public-or-private-select'\n                label='Public List?'\n                name={INPUT_NAMES.PUBLIC_OR_PRIVATE_LIST}\n                value={inputs[INPUT_NAMES.PUBLIC_OR_PRIVATE_LIST]}\n                onChange={publicOrPrivateSelectHandler}\n                options={YES_OR_NO_OPTIONS} />\n              <Button\n                style={{\n                  width: 138,\n                  marginTop: 48\n                }}\n                loading={submitStatus === STATUSES.PENDING}\n                contained\n                type='submit'\n                title={listId ? 'Save' : 'Continue'} />\n            </form>\n          </PaddingWrapper>\n        </PageWrapper>\n      </>\n    );\n  }\n};\n\nexport default withAuth(AddOrEdit);\n","\n// TODO: vulnerable\nconst YES_OR_NO_OPTIONS = [\n  {value: 'true', name: 'Yes'},\n  {value: 'false', name: 'No'}\n];\n\nconst SORT_BY_OPTIONS = [\n  {value: 'popularity.desc', name: 'Popularity'},\n  {value: 'vote_average.desc', name: 'Votes Average'},\n  {value: 'original_title.asc', name: 'Original Title'},\n  {value: 'release_date.desc', name: 'Release Date'}\n];\n\nexport {\n  YES_OR_NO_OPTIONS,\n  SORT_BY_OPTIONS\n};\n","\n\nimport NotFound from 'parts/NotFound';\nimport { useAuth } from 'utils/hocs/AuthProvider';\n\n/**\n * TODO:\n * Should handle error state and show proper error message based on error state. \n */\n\nconst withAuth = WrappedComponent => {\n  return React.forwardRef(function AuthComponent(props, ref) {\n    const {\n      isAuthenticated,\n      // TODO: could handle errors\n      error,\n      ...rest\n    } = useAuth();\n\n    if (!isAuthenticated) {\n      return (\n        <NotFound\n          title=\"You don't have permission to access this page!\"\n          subtitle=\"You've tried to request a page that requires you to be logged in. Log in to your account.\" />\n      );\n    }\n\n    return (\n      <WrappedComponent\n        ref={ref}\n        {...props}\n        isAuthenticated={isAuthenticated}\n        error={error}\n        {...rest} />\n    );\n  });\n};\n\nexport default withAuth;\n","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/list/add-or-edit\",\n      function () {\n        return require(\"private-next-pages/list/add-or-edit/index.js\");\n      }\n    ]);\n  ","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"default-style_container__13fu8\",\"value\":\"default-style_value__YD4jJ\",\"input\":\"default-style_input__2frfg\",\"select\":\"default-style_select__Kx5x7\",\"options\":\"default-style_options__1gC1c\",\"row\":\"default-style_row__2Q9eo\",\"option\":\"default-style_option__2m1oc\",\"container--multiple\":\"default-style_container--multiple__2GS6E\",\"is-selected\":\"default-style_is-selected__23CGe\",\"is-highlighted\":\"default-style_is-highlighted__1Y94J\",\"group-header\":\"default-style_group-header__2nCzE\",\"is-disabled\":\"default-style_is-disabled__3x3Z9\",\"is-loading\":\"default-style_is-loading__1SDV8\",\"container--search\":\"default-style_container--search__2GALE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"style_input__26uKc\",\"select\":\"style_select__3e3qd\"};"],"sourceRoot":""}