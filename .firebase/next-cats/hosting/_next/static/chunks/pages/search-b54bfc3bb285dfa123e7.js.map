{"version":3,"sources":["webpack://_N_E/./public/assets/svgs/icons/home.svg","webpack://_N_E/./actions/getSearchMovies.js","webpack://_N_E/./pages/search/index.js","webpack://_N_E/./parts/NotFound/TitleSection/index.js","webpack://_N_E/./parts/NotFound/NotFoundImage/index.js","webpack://_N_E/./parts/NotFound/index.js","webpack://_N_E/?0623"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_ref","d","props","viewBox","query","page","dispatch","type","TYPES","tmdbAPI","TMDB_API_VERSION","params","response","payload","data","console","log","Router","LINKS","useDispatch","general","useSelector","state","movies","useRouter","searchTerm","QUERY_PARAMS","Number","useEffect","clearMovies","checkEmptyObject","initialSearchTerm","newSearchTerm","pathname","scroll","smooth","getSearchMovies","loading","Loader","total_results","NotFound","title","subtitle","baseUrl","base","images","secure_base_url","PageWrapper","PaddingWrapper","Header","MovieList","theme","typography","fontWeightLight","fontWeightBold","width","height","withTheme","className","src","alt","LinkButton","href","STATIC_MOVIE_CATEGORIES","buttonProps","contained","startIcon","fill","mediaQueries","medium","window","__NEXT_P","push"],"mappings":"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","file":"static/chunks/pages/search-b54bfc3bb285dfa123e7.js","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport * as React from \"react\";\n\nvar _ref = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M280.37 148.26L96 300.11V464a16 16 0 0016 16l112.06-.29a16 16 0 0015.92-16V368a16 16 0 0116-16h64a16 16 0 0116 16v95.64a16 16 0 0016 16.05L464 480a16 16 0 0016-16V300L295.67 148.26a12.19 12.19 0 00-15.3 0zM571.6 251.47L488 182.56V44.05a12 12 0 00-12-12h-56a12 12 0 00-12 12v72.61L318.47 43a48 48 0 00-61 0L4.34 251.47a12 12 0 00-1.6 16.9l25.5 31A12 12 0 0045.15 301l235.22-193.74a12.19 12.19 0 0115.3 0L530.9 301a12 12 0 0016.9-1.6l25.5-31a12 12 0 00-1.7-16.93z\"\n});\n\nfunction SvgHome(props) {\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 576 512\"\n  }, props), _ref);\n}\n\nexport default SvgHome;","\n\nimport Router from 'next/router';\n\nimport * as TYPES from './types';\nimport tmdbAPI from 'services/tmdbAPI';\nimport LINKS from 'utils/constants/links';\nimport { TMDB_API_VERSION } from 'config/tmdb';\n\nconst getSearchMovies = (query, page) => async dispatch => {\n  try {\n    dispatch({type: TYPES.SET_MOVIES_LOADING});\n    const response = await tmdbAPI.get(`/${TMDB_API_VERSION}/search/movie`, {\n      params: {\n        query,\n        page\n      }\n    });\n    await dispatch({\n      type: TYPES.FETCH_SEARCH_MOVIES,\n      payload: response.data\n    });\n    dispatch({type: TYPES.UNSET_MOVIES_LOADING});\n  } catch (error) {\n    console.log('[getSearchMovies] error => ', error);\n    dispatch({type: TYPES.INSERT_ERROR, payload: error.response});\n    Router.push(LINKS.ERROR.HREF);\n  }\n};\n\nexport default getSearchMovies;\n","\n\nimport { useEffect } from 'react';\nimport Head from 'next/head';\nimport Router, { useRouter } from 'next/router';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { animateScroll as scroll } from 'react-scroll';\n\nimport Header from 'parts/Header';\nimport PageWrapper from 'parts/PageWrapper';\nimport NotFound from 'parts/NotFound';\nimport PaddingWrapper from 'parts/PaddingWrapper';\nimport MovieList from 'components/MovieList';\nimport Loader from 'components/UI/Loader';\nimport getSearchMovies from 'actions/getSearchMovies';\nimport clearMovies from 'actions/clearMovies';\nimport QUERY_PARAMS from 'utils/constants/query-params';\nimport LINKS from 'utils/constants/links';\nimport checkEmptyObject from 'utils/helpers/checkEmptyObject';\n\nconst Search = () => {\n  const dispatch = useDispatch();\n  const general = useSelector(state => state.general);\n  const movies = useSelector(state => state.movies);\n  const { query } = useRouter();\n\n  const searchTerm = query[QUERY_PARAMS.SEARCH_TERM];\n  const page = Number(query[QUERY_PARAMS.PAGE]);\n\n  useEffect(() => {\n    return () => {\n      dispatch(clearMovies());\n    };\n  }, [dispatch]);\n\n  useEffect(() => {\n    /**\n     * RE: https://github.com/vercel/next.js/issues/8259\n     * For example. https://github.com/vercel/next.js/issues/8259#issuecomment-650225962\n     */\n    if (checkEmptyObject(query)) return;\n\n    const initialSearchTerm = Router.query[QUERY_PARAMS.SEARCH_TERM];\n    const initialPage = Router.query[QUERY_PARAMS.PAGE];\n \n    if (!initialPage) {\n      const newPage = 1;\n      const newSearchTerm = initialSearchTerm;\n      console.log('[Search useEffect] query parameter update: newSearchTerm, newPage => ', newSearchTerm, newPage);\n      Router.replace({\n        pathname: LINKS.SEARCH.HREF,\n        query: {\n          [QUERY_PARAMS.SEARCH_TERM]: newSearchTerm,\n          [QUERY_PARAMS.PAGE]: newPage\n        }\n      });\n    }\n  }, [dispatch, query]);\n  \n  useEffect(() => {\n    if (!searchTerm || !page) return;\n\n    scroll.scrollToTop({smooth: true});\n\n    dispatch(getSearchMovies(searchTerm, page));\n  }, [searchTerm, page, dispatch]);\n\n  if (movies.loading) {\n    return <Loader />;\n  } else if (movies.total_results === 0) {\n    return (\n      <NotFound\n        title='Sorry!'\n        subtitle={`There were no results for ${searchTerm}...`} />\n    );\n  } else {\n    const { secure_base_url: baseUrl } = general.base.images;\n\n    return (\n      <PageWrapper>\n        <PaddingWrapper>\n          <Head>\n            <title>{`${searchTerm} - Search Results`}</title>\n          </Head>\n          <Header\n            title={searchTerm}\n            subtitle='search results' />\n          <MovieList\n            movies={movies}\n            baseUrl={baseUrl} />\n        </PaddingWrapper>\n      </PageWrapper>\n    );\n  }\n};\n\nexport default Search;\n","\n\nconst TitleSection = ({\n  theme,\n  title,\n  subtitle\n}) => (\n  <>\n    <div className='title-section'>\n      <h1 className='title'>{title}</h1>\n      <h2 className='subtitle'>{subtitle}</h2>\n    </div>\n    <style jsx>{`\n      .title-section {\n        text-align: center;\n        margin-bottom: 6rem;\n      }\n\n      .title-section .title {\n        color: var(--palette-text-primary);\n        font-weight: ${theme.typography.fontWeightLight};\n        font-size: 3.75rem;\n      }\n\n      .title-section .subtitle {\n        color: var(--palette-text-secondary);\n        font-weight: ${theme.typography.fontWeightBold};\n        font-size: 2.125rem;\n      }\n    `}</style>\n  </>\n);\n\nexport default TitleSection;\n","\nconst NotFoundImage = props => (\n  <>\n    <img\n      {...props}\n      width='423'\n      height='423'\n      className='not-found-image' />\n    <style jsx>{`\n      .not-found-image {\n        max-width: 96%;\n        height: 40vh;\n        margin-bottom: 6rem;\n      }\n    `}</style>\n  </>\n);\n\nexport default NotFoundImage;\n","\n\nimport PageWrapper from 'parts/PageWrapper';\nimport TitleSection from './TitleSection';\nimport NotFoundImage from './NotFoundImage';\nimport LinkButton from 'components/LinkButton';\nimport LINKS from 'utils/constants/links';\nimport withTheme from 'utils/hocs/withTheme';\nimport HomeIcon from 'public/assets/svgs/icons/home.svg';\nimport QUERY_PARAMS from 'utils/constants/query-params';\nimport STATIC_MOVIE_CATEGORIES from 'utils/constants/static-movie-categories';\n\nconst NotFound = ({\n  theme,\n  title,\n  subtitle\n}) => (\n  <>\n    <PageWrapper className='not-found'>\n      <TitleSection\n        theme={theme}\n        title={title}\n        subtitle={subtitle} />\n      <NotFoundImage\n        src='/assets/svgs/empty.svg'\n        alt='Not found!' />\n      <LinkButton\n        href={{\n          pathname: LINKS.HOME.HREF,\n          query: {\n            [QUERY_PARAMS.CATEGORY]: STATIC_MOVIE_CATEGORIES[0].name,\n            [QUERY_PARAMS.PAGE]: 1\n          }\n        }}\n        buttonProps={{\n          contained: true,\n          title: 'Home',\n          startIcon: (\n            <HomeIcon\n              fill='currentColor'\n              width='1.125em' />\n          )\n        }} />\n    </PageWrapper>\n    <style jsx>{`\n      :global(.not-found) {\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n      }\n      @media ${theme.mediaQueries.medium} {\n        :global(.not-found) {\n          width: 65%;\n        }\n      }\n    `}</style>\n  </>\n);\n\nexport default withTheme(NotFound);\n","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/search\",\n      function () {\n        return require(\"private-next-pages/search/index.js\");\n      }\n    ]);\n  "],"sourceRoot":""}